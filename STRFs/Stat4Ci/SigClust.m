function Res = SigClust(Res, Sig); 	% DISPLAYCI displays the results of the Pixel and Cluster tests.%	tCi = DisplayCi(Res,[background]) returns, for the Pixel test % 	(typeTest = 'P'), the Z-scores (tCi) above threshold (tP); and, for the Cluster test % 	(typeTest = 'C'), the Z-scores (tCi) above threshold (tC) and belonging to clusters % 	greater than the minimum size (k).% %		Res.ZCi	= Z-transformed smooth classification image (see ZTRANSCI) % 		Res.tC = Cluster test threshold (set by the user)% 		Res.k = Minimun cluster size (see STAT_THRESHOLD)% 		Res.tP = Pixel test threshold (see STAT_THRESHOLD)% 		Res.FWHM = full width half maximum of the Gaussian smoothing filter (see  HALFMAX)% 		Res.p = p-value for Pixel and Cluster tests (set by user)% 		[background] = image overlaid to the classification image to help interpretation.% 			With red pixels indicating the regions that attained statistical significance. % % 			E.g.,% 			SCi = double(imread('GenderCi.tiff'));  % 			sCi = cIm2hrCi(SCi); % 			sigma_b = 20;	% 			S_r = double(imread('faceMask.tif'));% 			vecSCi = SCi(eq(S_r,0));% 			ZSCi = ZTransSCi(SCi,[mean(vecSCi(:)),std(vecSCi(:))]);% 			ZSCi = ZSCi.*S_r;% 			P = .05;	% 			tC = 2.7; 	% 			Res = StatThresh(ZSCi,p,sigma_b,tC,S_r);% 			background = double(imread('w1H.JPG'));  % 			tCi = DiplayRes(Res,background); 	% %	For both tests, DISPLAYCI also returns a table with all relevant statistics (tC, tP, % 	p, sizes of significant clusters, and so on).%% Requires the ImageProcessing Toolbox.% % See also STATRESH, ZSCORESCI, DEMOSTAT4CI% % The Stat4Ci toolbox is free (http://mapageweb.umontreal.ca/gosselif/random-field.html); if you % use it in your research, please, cite us:% 	Chauvin, A., Worsley, K. J., Schyns, P. G., Arguin, M., & Gosselin, F. (2005). Accurate % 	statistical tests for smooth classification images. Journal of Vision, 5(9), 659-667, % 	http://journalofvision.org/5/9/1/, doi:10.1167/5.9.1.% % Alan Chauvin & FrŽdŽric Gosselin (frederic.gosselin@umontreal.ca), 20/08/2004% ------------------------------------------------------------% 1. displays cluster result    cCi = ( Res.ZSCi >= Res.tC);Res.cCi = cCi;[LabelClC ,nbClusterC] = bwlabel(cCi);    % labels all clusters in Res.ZSCiRes.nClust = nbClusterC;if nbClusterC ~= 0        for u = 1 : nbClusterC        cm(u) = length(find(LabelClC == u));	end;	%dbstop at 65    cm = [[1:nbClusterC];cm];    if nbClusterC > 1		%cm = sortrows(cm,2);       % sorts clusters per size		cm = sortrows(cm',1)';       % sorts clusters per size	end;        [~,b] = max(cm(2,:)); % number of the largest cluster     BigClust = zeros(size(cCi)) ;          BigClust(find(LabelClC == b)) = 1;                 LabelClC2 = LabelClC;        u = 0;c= 0;    while u < nbClusterC        u = u + 1;        Zclust = (LabelClC == cm(1,u)).*Res.ZSCi;        if cm(2,u) < Res.k || max(Zclust(:))< Sig            BigClust(find(LabelClC == cm(1,u))) = 0;            LabelClC(find(LabelClC == cm(1,u))) = 0;            LabelClC2(find(LabelClC2 == cm(1,u))) = 0;            		else            c = c +1;            maxZ(c) = max(max(Res.ZSCi(find(LabelClC2 == cm(1,u)))));            sizeZ(c) = cm(2,u);            [I,J]=find(LabelClC2 == cm(1,u));            yZ(c) = round((max(I)+min(I))/2);            xZ(c) = round((max(J)+min(J))/2);            LabelClC2(find(LabelClC2 == cm(1,u))) = 1;		end;	end;        Res.Clust = BigClust;        Res.AllClust = LabelClC;    Res.cm = cm;        Res.SmlClust = LabelClC;    Res.SmlClust(find(LabelClC==b)) = 0;        for i = 1 : c        Results(i,2) = Res.tC;        Results(i,3) = sizeZ(i);        Results(i,4) = sizeZ(i)/Res.FWHM/Res.FWHM';        Results(i,5) = maxZ(i);	        Results(i,6) = xZ(i);		        Results(i,7) = yZ(i);		if i == c					Results(i,1) = 67; % ascii code for 'C'		else	        Results(i,1) = 32; % ascii code for 'space'		end;	end;	if c, clear maxZ sizeZ yZ xZ;end;					if c > 0		Results = flipud(sortrows(Results,3));					fprintf('\n');		fprintf('\tt\t\tsize\tresels\tZmax\tx\ty\n');		fprintf('\t-----------------------------------------\n');		fprintf('%c\t[%.2f]\t%d\t\t%.2f\t%.2f\t%d\t%d\n',Results');			else		fprintf('\t-----------------------------------------\n');		fprintf('\tno cluster reach significance\n')			end;else	fprintf('\t-----------------------------------------\n');	fprintf('\tno cluster reach significance\n')    Res.Clust = LabelClC;    Res.SmlClust = LabelClC;    end;% --------------------------------------------------------% 2. displays pixel resultspCi = ( Res.ZSCi >= Res.tP);nbClusterP = ( sum(pCi(:)) >= 1 );if nbClusterP	fprintf('\t-----------------------------------------\n');	fprintf('P\t%.2f\t-\t-\t-\t-\t-\n',Res.tP);end;fprintf('\n');fprintf('p-value = [%.2f]\n',Res.p);fprintf('FWHM  == [%.1f]\n',Res.FWHM);fprintf('Minimum cluster size = %.1f\n',max(Res.k,0));clear cm