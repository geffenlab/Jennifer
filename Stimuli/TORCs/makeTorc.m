function [TORC,A] = makeTorc(duration,fs,d,omega,w,ntones,fmin,oct)
% REQUIRES makeRipple.m
% This code creates TORCs (temporally orthogonal ripple combinations) (See Klein et al. 2000).
% The TORC stimuli are the sum of periodic (T = 250 ms) 7- octave auditory gratings—also called ripples—each having a spectro-temporal profile modulated
% sinusoidally in spectrum and in time. Sets of TORCs in 'TORC-space' can be generated by keeping the spectral
% density (omega, cycles/octave) constant and varying the angular frequency of the modulation (w, Hz) e.g. omega = 1.4; w=[0:-4:-20];
%
% Inputs:
%   duration = Length of ripples (in seconds)
%   fs = sample frequency (seconds)
%   d = modulation depth
%   w = angular frequency (Hz) [temporal modulation]
%   ntones = number of tones (essentially frequency resolution)
%   fmin = min frequency (Hz)
%   oct = number of octaves TORC spans

%% Make TORC

ripple_phi = rand(1,length(w))*2*pi;

for ww = 1:length(w)
%    [y(ww,:),A(:,:,ww),S(:,:,ww),Y(:,:,ww)]=makeRipple(duration, fs,d,omega,w(ww),ripple_phi(ww),ntones,fmin,oct);
   [RIPPLE(ww,:),A(:,:,ww)] = makeRipple(duration,fs,d,omega,w(ww),ripple_phi(ww),ntones,fmin,oct);
end
% figure
% colormap gray
% imagesc(flipud(sum(A,3)));
%% Sound TORC
TORC=squeeze(sum(RIPPLE));
% soundsc(z/20,fs)

%% save spectrogram and TORC
% figure;
% for u = 1:length(w)
%     subplot(1, length(w), u);spectrogram(y(u, :), 100, 0, 10000, 100000,'yaxis');
%     ylim([5000 40000])
% end
% 
% for u = 1:length(w)
%  figure
%  imagesc(A(:,:,u));
%    
% end
% figure
% spectrogram(sum(y), 100, 0, 1000, 100000,'yaxis');
%  ylim([5000 40000])
% filename=['K002_omega'];
% wavwrite(z, fs, 32, filename);